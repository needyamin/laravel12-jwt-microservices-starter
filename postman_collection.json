{
	"info": {
		"_postman_id": "7ba810d6-232d-4362-a663-c6e9e1c73ba2",
		"name": "Office Management ERP - Microservices API",
		"description": "Complete API collection for Office Management ERP system with Gateway, Users Service, and Orders Service. Features JWT authentication, role-based access control, and comprehensive CRUD operations.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32341795"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"description": "Public authentication endpoints - no token required",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/auth/register",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/auth/login",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/auth/refresh",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/auth/logout",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë§ User Management",
			"description": "User profile and management endpoints",
			"item": [
				{
					"name": "Get My Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/users/profile",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update My Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Updated\",\n    \"current_password\": \"password123\",\n    \"password\": \"newpassword123\",\n    \"password_confirmation\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/users/profile",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üëë Admin - User Management",
			"description": "Admin-only user management endpoints (requires admin/superadmin role)",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/users",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/users/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"role\": \"moderator\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/users/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/users/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üì¶ Order Management",
			"description": "Order CRUD operations for authenticated users",
			"item": [
				{
					"name": "Get My Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/orders",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"total_amount\": 99.99,\n    \"currency\": \"USD\",\n    \"shipping_address\": {\n        \"name\": \"John Doe\",\n        \"street\": \"123 Main St\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"postal_code\": \"10001\",\n        \"country\": \"USA\"\n    },\n    \"notes\": \"Please deliver after 5 PM\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/orders",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/orders/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"processing\",\n    \"notes\": \"Updated notes\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/orders/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/orders/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîß Admin - Order Management",
			"description": "Admin/Moderator order management endpoints",
			"item": [
				{
					"name": "Get All Orders (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/orders/admin/all",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"orders",
								"admin",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"shipped\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/orders/1/status",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"orders",
								"1",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üè• System Health",
			"description": "System health and status endpoints",
			"item": [
				{
					"name": "Gateway Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/health",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users Service Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{users_url}}/api/health",
							"host": [
								"{{users_url}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders Service Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{orders_url}}/api/health",
							"host": [
								"{{orders_url}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîß Direct Service Access",
			"description": "Direct access to individual services (for development/testing)",
			"item": [
				{
					"name": "Users Service - Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Direct User\",\n    \"email\": \"direct@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{users_url}}/api/auth/register",
							"host": [
								"{{users_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users Service - Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"direct@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{users_url}}/api/auth/login",
							"host": [
								"{{users_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders Service - Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Id",
								"value": "1"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"total_amount\": 150.00,\n    \"currency\": \"USD\",\n    \"shipping_address\": {\n        \"name\": \"Direct User\",\n        \"street\": \"456 Direct St\",\n        \"city\": \"Direct City\",\n        \"state\": \"DC\",\n        \"postal_code\": \"12345\",\n        \"country\": \"USA\"\n    },\n    \"notes\": \"Direct service test\"\n}"
						},
						"url": {
							"raw": "{{orders_url}}/api/",
							"host": [
								"{{orders_url}}"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "gateway_url",
			"value": "http://127.0.0.1:8000",
			"description": "API Gateway URL"
		},
		{
			"key": "users_url",
			"value": "http://127.0.0.1:8001",
			"description": "Users Service URL"
		},
		{
			"key": "orders_url",
			"value": "http://127.0.0.1:8002",
			"description": "Orders Service URL"
		},
		{
			"key": "token",
			"value": "",
			"description": "JWT token for regular user authentication"
		},
		{
			"key": "admin_token",
			"value": "",
			"description": "JWT token for admin user authentication"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-set Content-Type for JSON requests",
					"if (pm.request.body && pm.request.body.mode === 'raw') {",
					"    pm.request.headers.add({",
					"        key: 'Content-Type',",
					"        value: 'application/json'",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract token from login responses",
					"if (pm.response.json() && pm.response.json().token) {",
					"    pm.collectionVariables.set('token', pm.response.json().token);",
					"    console.log('Token saved to collection variable');",
					"}",
					"",
					"// Log response for debugging",
					"console.log('Response Status:', pm.response.status);",
					"console.log('Response Body:', pm.response.text());"
				]
			}
		}
	]
}